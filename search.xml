<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>frp内网穿透教程</title>
      <link href="/2023/02/18/frp-nei-wang-chuan-tou-jiao-cheng/"/>
      <url>/2023/02/18/frp-nei-wang-chuan-tou-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="frp搭建内网穿透教程"><a href="#frp搭建内网穿透教程" class="headerlink" title="frp搭建内网穿透教程"></a>frp搭建内网穿透教程</h1><img src="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230218213701529.png" class="lazyload placeholder" data-srcset="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230218213701529.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230218213701529" style="zoom:50%;" /><p>我们用过服务器的同学都知道ssh，就是一个远程连接服务器的协议，如果是对于实验室的电脑则需要在同一局域网下才可以连接。用过阿里云服务器或者腾讯云的同学也知道，这种公网ip的服务器可以直接不受局域网影响即可访问。</p><p>所以可能就有同学想问是否可以把实验室的服务器也弄成公网。答案是：有</p><ul><li>花生壳（不推荐）</li></ul><p><img src="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230218212009006.png" class="lazyload placeholder" data-srcset="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230218212009006.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230218212009006"></p><ul><li>frp（推荐）</li></ul><p>1、前提需要一台公网服务器，比如阿里云用来当作frp的服务器端，实验室的电脑则作为客户端。（可借用师兄或者某台作为服务器端）</p><p>frp仓库：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p>下载后解压 <code>tar -zxvf ***.tar.gz</code> 再进入该目录</p><p><code>vim frps.ini</code> 编辑服务器端配置 for example</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">123456789</span></span><br><span class="line"><span class="attr">dashboard_user</span> = lucky</span><br><span class="line"><span class="attr">dashboard_pwd</span> = <span class="number">111111111</span>   <span class="comment">#该三部分自己设置</span></span><br></pre></td></tr></table></figure><p>2、运行服务器端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./frps -c frps.ini &amp; #建议nohup保持云服务器不关机</span><br></pre></td></tr></table></figure><p>3、客户端</p><p>下载过程以及解压过程如上所述</p><p>不同之处：</p><p><code>vim frpc.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = ***.***.**.** <span class="comment">#公网ip</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span> <span class="comment">#服务器端口</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">123456789</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span> <span class="comment">#本地ip</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span> <span class="comment">#需要映射的端口</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">222</span> <span class="comment">#映射到公网服务器的哪个端口</span></span><br></pre></td></tr></table></figure><p>4、运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./frpc -c frpc.ini &amp;</span><br></pre></td></tr></table></figure><p>5、测试连接即可成功</p><p>参考：</p><p><a href="https://blog.csdn.net/weixin_49764009/article/details/122018688">https://blog.csdn.net/weixin_49764009/article/details/122018688</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>chatgpt使用教程</title>
      <link href="/2023/02/12/chatgpt-shi-yong-jiao-cheng/"/>
      <url>/2023/02/12/chatgpt-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="chatGPT使用教程"><a href="#chatGPT使用教程" class="headerlink" title="chatGPT使用教程"></a>chatGPT使用教程</h1><p><img src="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230212211052395.png" class="lazyload placeholder" data-srcset="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230212211052395.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230212211052395"></p><p>chatgpt官网：<a href="https://openai.com/blog/chatgpt/">https://openai.com/blog/chatgpt/</a></p><p>注册或者使用Google or Microsoft账户登陆即可 （I have used a google account which I have several years ago.）</p><p>当提示此地区不可用或者不提供服务的情况</p><p>梯子改为全局 地区不要选HK，我用的Korea</p><p>修改为全局后，在浏览器地址栏输入如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 注意<span class="attr">javascript</span>: 要手动输入 无法复制</span><br><span class="line"><span class="attr">javascript</span>:<span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">removeItem</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>).<span class="title function_">find</span>(<span class="function"><span class="params">i</span>=&gt;</span>i.<span class="title function_">startsWith</span>(<span class="string">&#x27;@@auth0spajs&#x27;</span>)))</span><br></pre></td></tr></table></figure><p>然后回车 再刷新当前页面即可进入chatgpt短信验证部分</p><p>短信服务购买：<a href="https://sms-activate.org/">https://sms-activate.org/</a></p><p>最近一直在涨价，我选的是马来西亚</p><p>亲测可用 越晚涨价越离谱</p><h5 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h5><p><img src="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230212210012744.png" class="lazyload placeholder" data-srcset="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230212210012744.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230212210012744"></p><p>When you have finished these steps.You can use chatgpt happily now !!!</p><h5 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h5><p>地区不提供服务解决方法：<a href="https://cloud.tencent.com/developer/article/2190198">https://cloud.tencent.com/developer/article/2190198</a></p><p>短信验证解决方案：<a href="https://www.xnbeast.com/create-openai-chatgpt-account/">https://www.xnbeast.com/create-openai-chatgpt-account/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>k8s学习教程(基础配置)--part 1</title>
      <link href="/2023/01/15/k8s-xue-xi-jiao-cheng-ji-chu-pei-zhi-part-1/"/>
      <url>/2023/01/15/k8s-xue-xi-jiao-cheng-ji-chu-pei-zhi-part-1/</url>
      
        <content type="html"><![CDATA[<h1 id="k8s学习教程（一、初始配置）"><a href="#k8s学习教程（一、初始配置）" class="headerlink" title="k8s学习教程（一、初始配置）"></a>k8s学习教程（一、初始配置）</h1><img src="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230115202715679.png" class="lazyload placeholder" data-srcset="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230115202715679.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230115202715679" style="zoom: 33%;" /><h2 id="1-minikube-启动过程"><a href="#1-minikube-启动过程" class="headerlink" title="1 minikube 启动过程"></a>1 minikube 启动过程</h2><p>在启动之前，需要下载docker！！！</p><h3 id="1-1-minikube-start"><a href="#1-1-minikube-start" class="headerlink" title="1.1 minikube start"></a>1.1 minikube start</h3><p>启动指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动指令</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先设置一下k8s版本   注意：大坑  不明原因</span></span><br><span class="line">sudo usermod -aG docker lucky &amp;&amp; newgrp docker</span><br><span class="line">minikube config set kubernetes-version v1.23.3</span><br><span class="line">minikube start --image-mirror-country=&#x27;cn&#x27;</span><br></pre></td></tr></table></figure><p>需要切换一个用户 同时需要用ssh工具重新连接这个新用户，不可以su 新用户，这样才可以启动dashboard</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">minikube dashboard</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置minikube dashboard的ip和端口为本机，以便外网访问 --address 为 ip</span></span><br><span class="line">kubectl proxy --port=7999 --address=&#x27;202.120.87.115&#x27; --accept-hosts=&#x27;^.*&#x27; &amp;</span><br></pre></td></tr></table></figure><h3 id="1-2-minikube-stop"><a href="#1-2-minikube-stop" class="headerlink" title="1.2 minikube stop"></a>1.2 minikube stop</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">minikube stop </span><br><span class="line">minikube delete</span><br><span class="line">minikube start</span><br></pre></td></tr></table></figure><h2 id="2-minikube-集群部署初体验"><a href="#2-minikube-集群部署初体验" class="headerlink" title="2 minikube 集群部署初体验"></a>2 minikube 集群部署初体验</h2><h3 id="2-1-kubectl"><a href="#2-1-kubectl" class="headerlink" title="2.1 kubectl"></a>2.1 kubectl</h3><p>常用指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过 yaml配置文件 部署nginx集群</span></span><br><span class="line">kubectl apply -f nginx.yaml</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过created方式创建并部署nginx集群</span></span><br><span class="line">kubectl create deployment nginx --image=nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以nodeport方式暴露端口 80 -&gt; 8080</span></span><br><span class="line">kubectl expose deployment nginx --port=8080 --target-port=80 --type=&quot;NodePort&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">port-forward 端口转发且允许任意ip访问，即可在别处访问 8080 -&gt; 8080</span></span><br><span class="line">kubectl port-forward --address 0.0.0.0 -n default service/nginx 8080:8080</span><br></pre></td></tr></table></figure><p>nginx.yaml文件内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.7.9</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看pod和service指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods</span><br><span class="line">kubectl get services</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看pod详细信息</span></span><br><span class="line">kubectl describe deployment nginx</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看service相信信息</span></span><br><span class="line">kubectl describe service nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图床配置及选型</title>
      <link href="/2023/01/15/tu-chuang-pei-zhi-ji-xuan-xing/"/>
      <url>/2023/01/15/tu-chuang-pei-zhi-ji-xuan-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="图床的基本配置与选型"><a href="#图床的基本配置与选型" class="headerlink" title="图床的基本配置与选型"></a>图床的基本配置与选型</h1><p><img src="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230115200604826.png" class="lazyload placeholder" data-srcset="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230115200604826.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230115200604826"></p><p>图床有哪些基本配置和方案，可以参考我师兄的博客<a href="https://icyleaves.github.io/2022/12/30/22-12-30-find-image-server/#more">https://icyleaves.github.io/2022/12/30/22-12-30-find-image-server/#more</a></p><p>我师兄烨神是我滴偶像-超级厉害，我的个人网站也是看到他网站之后心血来潮弄的</p><p>但是我最后没有选择师兄的方案，原因：</p><p>我发现<code>imgur</code>和<code>Github</code>这类外网一样，没有加速器的话就需要科学上网，不信你看我前两篇文章里的图片是不是都访问不了，因我我采用的<code>github</code>云存储方式，配合<code>jsDelivr</code>加速，可是<code>jsDelivr</code>已经崩了，不科学上网的话是看不到那些图片的。</p><p>所以，最后我选择了<code>picGo + 阿里云OSS</code>，阿里云你们都懂得，国内最牛的云计算和云存储好吧，我上一届师兄就是去的阿里云，年薪<code>60w+</code>，啊啊啊啊羡慕死了啊</p><p>因为阿里云是国内的，所以不怕访问不了图片，而且价格很低很低，我选择的低频访问方案，<code>0.08rmb/GB/月</code></p><p><img src="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230115200159615.png" class="lazyload placeholder" data-srcset="https://luckyblob.oss-cn-shanghai.aliyuncs.com/postimgs/image-20230115200159615.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20230115200159615"></p><p><code>picGo</code>和<code>阿里云OSS</code>的开通网上教程一大堆，就不赘述了。</p><p>我本科毕业设计就是用的<code>阿里云OSS</code>，如果比较喜欢<code>linux</code>的，比较推荐阿里云服务器的学生优惠，<code>30+rmb/年</code>，但是只能用一年，买来学习Linux的基础知识很Nice啦！</p><p>至于为什么最后选择<code>阿里云OSS</code>，可能是因为准备把这个作为个人网站而不是个人博客，也可以让非计算机行业的人访问，就是这样。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
